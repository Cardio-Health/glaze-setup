version: '3.8'
services:
  frontend:
    image: doctorati/glaze:frontend-3.4
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=local
      - NEXTAUTH_URL=${FRONTEND_URL}
    depends_on:
      - backend
  backend:
    image: doctorati/glaze:backend-3.4
    ports:
      - '8000:8000'
    environment:
      - NODE_ENV=docker
    depends_on:
      pgdb:
        condition: service_healthy
  db:
    image: doctorati/glaze:database-3.4
    environment:
      MYSQL_ROOT_PASSWORD: evolution
      MYSQL_DATABASE: main
    volumes:
      - 'db_data:/var/lib/mysql'
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 5s
  pgdb:
    image: doctorati/glaze:pg_database-3.5
    environment:
      POSTGRES_PASSWORD: evolution
      POSTGRES_DB: main
      POSTGRES_USER: postgres
      PGUSER: postgres
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "postgres", "-d", "main"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 5s
  volumes:
    db_data: {}
    pg_data:
      driver: local
      driver_opts:
        type: none
        device: ${HOME}/pg_data
        o: bind